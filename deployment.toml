#Add the following configurations under [apim.opa_security] to <APIM_HOME>/repository/conf/deployment.toml

#If any of the configurations are not set except the OPA Server, the default
#configuration will be used.

[apim.opa_security]
operation_mode = "sync"
block_if_server_unreachable = false
block_if_policy_not_found = false
cash_expiry_time = 15
server_endpoint = "http://localhost/8081/v1/data"
backup_server_endpoint = "http://localhost/8081/v1/data"
auth_token = "SIDEBAND_AUTHENTICATION_TOKEN"
cache.token_cache = true
cache.cookie_cache = true
cache.ip_cache = true
data_publisher.max_per_route = 500
data_publisher.max_open_connections = 200
data_publisher.connection_timeout = 30
threadpool_executor.core_pool_size = 200
threadpool_executor.max_pool_size = 500
threadpool_executor.keep_alive_time = 100
stack_object_pool.max_idle = 100
stack_object_pool.init_idle_capacity = 50
skip_cert_validation = false

#Config descriptions

#Three operation modes. "sync", "async" and "hybrid"
#operation_mode = "MODE"

#Cache Expiry time in minutes.
#cash_expiry_time = 15

#OPA server related configuration used by the feature.
#OPA server is used to validate and authenticate users against the request metadata.
#Without this configuration, feature will not work.
#server_endpoint = "OPA_REQUEST_ENDPOINT"
#backup_server_endpoint = "BACKUP_OPA_REQUEST_ENDPOINT"
#auth_token = "REQUEST_AUTHENTICATION_TOKEN"

#Configurations related to the HTTP Client used in this feature.
#HTTP request are used to communicate with the API Security Enforcer and the WSO2 API Manager

#The maximum number of HTTP connections allowed across all routes
#data_publisher.max_per_route = 500
#The maximum number of HTTP connections allowed for a route
#data_publisher.max_open_connections = 200
#Connection timeout for the HTTP request in seconds. The socket timeout is set with the addition of another 10 seconds
#data_publisher.connection_timeout = 30

#Configurations related to ThreadPoolExecutor. Thread pool is used to handle concurrent requests to feature"

#The number of threads to keep in the pool, even if they are idle
#threadpool_executor.core_pool_size = 200
#The maximum number of threads to allow in the pool.
#threadpool_executor.max_pool_size = 500
#When the number of threads is greater than the core, this is the maximum time in seconds that excess idle threads
#will wait for new tasks before terminating.
#threadpool_executor.keep_alive_time = 100

#Configurations related to Stack object pool. Stack object pool is used to handle high concurrency scenarios
#without dropping any messages.

#Cap on the number of "sleeping" instances in the pool.
#stack_object_pool.max_idle = 100
#Initial size of the pool (this specifies the size of the container, it does not cause the pool to be pre-populated)
#stack_object_pool.init_idle_capacity = 50